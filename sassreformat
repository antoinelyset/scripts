#!/usr/bin/env ruby
require "pathname"
# Change it if you want a copy e.g :  .scss.copy
SASS_EXTENSION = '.scss'

VALUES   = %w{color-whiteGrey50}
FUNCTION = "alpha-color"

if ARGV.empty?
  puts "Usage : ./less2sass file1 file2 ..."
  puts "Edit VALUES (in script) to add Sass variables"
end

def get_files(file_name)
  pn = Pathname.new(file_name)
  if pn.directory?
    pn.children.map { |c| get_files(c) }.flatten
  else
    pn.realpath.to_s
  end
end

def execute_on(file_name)
  begin
    text = File.read(file_name)
  rescue Exception
    puts "Error : can't open file : #{file_name}"
  end
  reformat(text)
  base_name = File.basename(file_name, SASS_EXTENSION)
  dir_name  = File.dirname(file_name)
  converted_file_path = "#{dir_name}/#{base_name}#{SASS_EXTENSION}"
  begin
    File.open(converted_file_path, "w") { |file| file << text }
  rescue Exception
    puts "Error : can't write file : #{converted_file_path}"
  end
  puts "\n== Output : #{converted_file_path} =="
end

def reformat(text)
  VALUES.each do |value|
    regex = Regexp.new("(\\S+):[ ]*([^$;]*)[ ]*\\$(#{value})[ ]*(.*);")
    text.gsub!(regex) do |match|
      start_string = "@include #{FUNCTION}(#{$1.strip}, $#{$3.strip}"
      start_string << ", '', #{$4.strip});"          if $2.empty?  && !$4.empty?
      start_string << ", #{$2.strip});"              if !$2.empty? && $4.empty?
      start_string << ", #{$2.strip}, #{$4.strip});" if !$2.empty? && !$4.empty?
      start_string << ');'                           if $2.empty?  && $4.empty?
      puts "#{match.strip} -> #{start_string}"
      start_string
    end
  end
end

file_names = ARGV
files = []
file_names.each { |file_name| files += get_files(file_name) }
files.each { |file| execute_on(file) }